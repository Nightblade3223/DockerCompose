version: "3.9"

###############################################################################
# Media‑stack docker‑compose
#
# All host paths are defined through environment variables in an accompanying
# .env file so you can relocate libraries or change UID/GID without editing
# this file.  Example .env keys:
#   TZ=Australia/Brisbane
#   PUID=1000        # Host user id that owns the files
#   PGID=1000        # Host group id
#   ARPATH=/srv/docker/media/
#   NASDRIVE_1=/mnt/nas1/
#
# Each service block below is heavily commented.  Remove comments once you’re
# familiar with the layout to keep the file tidy.
###############################################################################

services:
  ###########################################################################
  # ───────────── INDEXERS ─────────────
  ###########################################################################
  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    hostname: prowlarr
    volumes:
      - ${ARRPATH}Prowlarr/config:/config         # App config & DB
      - ${ARRPATH}Prowlarr/backup:/data/Backup    # Scheduled backups
      - ${ARRPATH}Downloads:/downloads            # Reference to downloads
    ports:
      - "9696:9696"                               # Web UI
    restart: unless-stopped
    env_file:
      - ".env"

  ###########################################################################
  # ───────────── TV AUTOMATION ─────────────
  ###########################################################################
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    hostname: sonarr
    volumes:
      - ${ARRPATH}Sonarr/config:/config
      - ${ARRPATH}Sonarr/backup:/data/Backup
      - ${ARRPATH}Sonarr/tvshows:/data/tvshows            # Local library
      - ${NASDRIVE_1}Sonarr/tvshows:/data/nas_tvshows     # NAS library
      - ${ARRPATH}Downloads:/downloads                    # Completed/Unsorted
    ports:
      - "8989:8989"
    restart: unless-stopped
    env_file:
      - ".env"

  ###########################################################################
  # ───────────── MOVIE AUTOMATION ─────────────
  ###########################################################################
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    hostname: radarr
    volumes:
      - ${ARRPATH}Radarr/config:/config
      - ${ARRPATH}Radarr/backup:/data/Backup
      - ${ARRPATH}Radarr/movies:/data/movies               # Local
      - ${NASDRIVE_1}Radarr/movies:/data/nas_movies        # NAS
      - ${ARRPATH}Downloads:/downloads
    ports:
      - "7878:7878"
    restart: unless-stopped
    env_file:
      - ".env"

  ###########################################################################
  # ───────────── MUSIC AUTOMATION ─────────────
  ###########################################################################
  lidarr:
    image: linuxserver/lidarr:latest
    container_name: lidarr
    hostname: lidarr
    volumes:
      - ${ARRPATH}Lidarr/config:/config
      - ${ARRPATH}Lidarr/music:/data/musicfolder
      - ${NASDRIVE_1}Lidarr/music:/data/nas_music
      - ${ARRPATH}Downloads:/downloads
    ports:
      - "8686:8686"
    restart: unless-stopped
    env_file:
      - ".env"

  ###########################################################################
  # ───────────── HOMEPAGE / DASHBOARD ─────────────
  ###########################################################################
  homarr:
    image: ghcr.io/ajnart/homarr:latest
    container_name: homarr
    restart: unless-stopped
    volumes:
      - ${ARRPATH}Homarr/configs:/app/data/configs
      - ${ARRPATH}Homarr/icons:/app/public/icons
      - ${ARRPATH}Homarr/data:/data
    ports:
      - "7575:7575"
    env_file:
      - ".env"

  ###########################################################################
  # ───────────── MEDIA SERVER ─────────────
  ###########################################################################
  jellyfin:
    image: linuxserver/jellyfin:latest
    container_name: jellyfin
    hostname: jellyfin
    ports:
      - "8096:8096/tcp"     # Web interface
      - "7359:7359/udp"     # Network discovery
      - "1900:1900/udp"     # DLNA
    volumes:
      - ${ARRPATH}Jellyfin/config:/config
      - ${ARRPATH}Radarr/movies:/data/Movies
      - ${NASDRIVE_1}Radarr/movies:/data/nas_Movies
      - ${ARRPATH}Sonarr/tvshows:/data/TVShows
      - ${NASDRIVE_1}Sonarr/tvshows:/data/nas_TVShows
      - ${ARRPATH}Lidarr/music:/data/Music
      - ${NASDRIVE_1}Lidarr/music:/data/nas_Music
    restart: unless-stopped
    env_file:
      - ".env"

  ###########################################################################
  # ───────────── REQUEST MANAGEMENT ─────────────
  ###########################################################################
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    ports:
      - "5055:5055"
    volumes:
      - ${ARRPATH}Jellyseerr/config:/app/config
    restart: unless-stopped
    env_file:
      - ".env"

  ###########################################################################
  # ───────────── TORRENT CLIENT ─────────────
  ###########################################################################
  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    hostname: qbittorrent
    volumes:
      - ${ARRPATH}qbittorrent/config:/config
      - ${ARRPATH}Downloads:/downloads
    ports:
      - "8080:8080"   # Web UI
      - "6881:6881"   # BitTorrent TCP
      - "6881:6881/udp"
    environment:
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
    labels:
      - "com.centurylinklabs.watchtower.enable=false"   # Skip watchtower auto-updates
    restart: unless-stopped
    env_file:
      - ".env"

  ###########################################################################
  # ───────────── TRANSCODE SERVER ─────────────
  ###########################################################################
  tdarr:
    image: ghcr.io/haveagitgat/tdarr:latest   # v2 server image
    container_name: tdarr
    hostname: tdarr
    ports:
      - "8265:8265"   # Web UI
      - "8266:8266"   # Server <-> Node comms
    volumes:
      - ${ARRPATH}Tdarr/config:/app/config                   # Settings & logs
      - ${ARRPATH}Tdarr/cache:/temp    # Temp cache
      - ${ARRPATH}Radarr/movies:/data/movies
      - ${NASDRIVE_1}Radarr/movies:/data/nas_movies
      - ${ARRPATH}Sonarr/tvshows:/data/tvshows
      - ${NASDRIVE_1}Sonarr/tvshows:/data/nas_tvshows
    restart: unless-stopped
    env_file:
      - ".env"

  ###########################################################################
  # ───────────── TRANSCODE WORKER NODE ─────────────
  ###########################################################################
  tdarr-node:
    image: ghcr.io/haveagitgat/tdarr_node:latest   # v2 node image
    container_name: tdarr-node
    hostname: tdarr-node
    depends_on:
      - tdarr
    ports:
      - "8267:8267"   # Optional node UI/debug port
    volumes:
      - ${ARRPATH}Tdarr/config:/app/config
      - ${ARRPATH}Tdarr/cache:/temp                       # Shared cache with server
      - ${ARRPATH}Radarr/movies:/data/movies
      - ${NASDRIVE_1}Radarr/movies:/data/nas_movies
      - ${ARRPATH}Sonarr/tvshows:/data/tvshows
      - ${NASDRIVE_1}Sonarr/tvshows:/data/nas_tvshows
    restart: unless-stopped
    env_file:
      - ".env"
    environment:
      - nodeID=tdarr-node
      - serverIP=tdarr
      - serverPort=8266
      - UMASK_SET=002

###############################################################################
# OPTIONAL: Custom network / named volumes
#
# networks:
#   media:
#     driver: bridge
#
# volumes:
#   downloads:
#   config:
#
# To attach all services to the custom network, add the following under each
# service:
#   networks:
#     - media
###############################################################################
